<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:V2ex.Maui.Pages.ViewModels"
             xmlns:services="clr-namespace:V2ex.Maui.Services"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:V2ex.Maui.Converters"
             xmlns:components="clr-namespace:V2ex.Maui.Pages.Components"
             xmlns:fonts="clr-namespace:V2ex.Maui.Services.Fonts"
             x:Class="V2ex.Maui.Pages.TopicPage"
             Shell.NavBarIsVisible="True"
             x:DataType="viewModels:TopicPageViewModel"
             Title="{services:L Text=TopicPageTitle}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{services:L Text=OpenInBrowser}"
             Command="{Binding OpenInBrowserCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource Glyph="{x:Static fonts:MdOutlined.Open_in_browser}"
                   FontFamily="MdOutlined"
                   Color="#c6c6c6"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <toolkit:IsEqualConverter x:Key="IsEqualConverter"></toolkit:IsEqualConverter>
        <toolkit:IsStringNotNullOrEmptyConverter x:Key="IsStringNotNullOrEmptyConverter"></toolkit:IsStringNotNullOrEmptyConverter>
        <toolkit:IsListNotNullOrEmptyConverter x:Key="IsListNotNullOrEmptyConverter"></toolkit:IsListNotNullOrEmptyConverter>
        <converters:HtmlDecodeConverter x:Key="HtmlDecodeConverter" />
        <converters:MarkdownContainerConverter x:Key="MarkdownContainerConverter" />
        <DataTemplate x:Key="ReplyCard" x:DataType="viewModels:ReplyViewModel">
            <VerticalStackLayout Background="transparent">
                <Grid Margin="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Source="{Binding Avatar}" 
                           HeightRequest="32" WidthRequest="32" 
                           Aspect="AspectFill">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding TapUserCommand}"/>
                        </Image.GestureRecognizers>
                    </Image>
                    <VerticalStackLayout Grid.Column="1" Margin="8,0" HorizontalOptions="Start">
                        <Label Text="{Binding UserName}" />
                        <Label TextColor="{StaticResource Gray400}" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding ReplyTimeText}" FontSize="Caption"></Span>
                                    <Span Text=" " FontSize="Caption"></Span>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>

                        <VerticalStackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding TapUserCommand}"/>
                        </VerticalStackLayout.GestureRecognizers>
                    </VerticalStackLayout>

                    <Grid Grid.Column="2" VerticalOptions="Start" >
                        <BoxView Style="{StaticResource RoundBadge}"/>
                        <Label Margin="8,4" Text="{Binding Floor}" FontSize="Caption"></Label>
                    </Grid>
                </Grid>

                <components:HtmlLabel Margin="8" Text="{Binding Content}"></components:HtmlLabel>

                <BoxView Margin="0,4,0,0" Style="{StaticResource HorizontalSeparator}"></BoxView>
            </VerticalStackLayout>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplate" x:DataType="viewModels:TopicViewModel">
            <VerticalStackLayout>
                <Grid Margin="8" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="{Binding Avatar}" 
                        HeightRequest="32" WidthRequest="32" 
                        Aspect="AspectFill">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding TapUserCommand}"/>
                        </Image.GestureRecognizers>
                    </Image>

                    <VerticalStackLayout Grid.Column="1" Margin="8,0" HorizontalOptions="Start">
                        <Label Text="{Binding UserName}" />
                        <Label TextColor="{StaticResource Gray400}" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding CreatedText}" FontSize="Caption"></Span>
                                    <Span Text=" " FontSize="Caption"></Span>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <VerticalStackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding TapUserCommand}"/>
                        </VerticalStackLayout.GestureRecognizers>
                    </VerticalStackLayout>

                    <Grid Grid.Column="2" VerticalOptions="Start" >
                        <BoxView Style="{StaticResource RoundBadge}"/>
                        <Label  Margin="8,4" Text="{Binding NodeName}" FontSize="Caption"></Label>
                    </Grid>
                </Grid>
                <Label Margin="8,4" Text="{Binding Title, Converter={StaticResource HtmlDecodeConverter}}" >
                </Label>
                <components:HtmlLabel Margin="8,4" Text="{Binding Content}"></components:HtmlLabel>

                <VerticalStackLayout BackgroundColor="#fffff9" 
                      IsVisible="{Binding Supplements, Converter={StaticResource IsListNotNullOrEmptyConverter}}">
                    <VerticalStackLayout BindableLayout.ItemsSource="{Binding Supplements}"
                          BindableLayout.ItemTemplate="{StaticResource SupplementTemplate}">
                    </VerticalStackLayout>
                </VerticalStackLayout>


                <Grid Margin="8,4" IsVisible="{Binding TopicStats, Converter={StaticResource IsStringNotNullOrEmptyConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="2" Text="{Binding TopicStats, Converter={StaticResource HtmlDecodeConverter}}" FontSize="Caption"
                            TextColor="{StaticResource Gray400}" >
                    </Label>
                </Grid>

                <BoxView Margin="0,4,0,0"  Style="{StaticResource HorizontalSeparator}" ></BoxView>
            </VerticalStackLayout>
        </DataTemplate>
        
        <DataTemplate x:Key="FooterTemplate" x:DataType="viewModels:TopicPageViewModel">

            <HorizontalStackLayout HorizontalOptions="Center">
                <Label Text="全部加载完成"
                       Margin="16"
                       IsVisible="{Binding LoadAll}"
                       TextColor="{StaticResource Gray400}"
                       FontSize="Caption"/>

                <ActivityIndicator 
                    Color="{StaticResource Violet900}"
                    IsRunning="{Binding IsLoading}"
                    HorizontalOptions="Center"
                    VerticalOptions="Center" />
            </HorizontalStackLayout>
        </DataTemplate>
        

        <DataTemplate x:Key="SupplementTemplate" x:DataType="viewModels:SupplementViewModel">

            <toolkit:DockLayout Margin="8" VerticalSpacing="8" HorizontalSpacing="8">
                <BoxView toolkit:DockLayout.DockPosition="Left" 
                         Style="{StaticResource VerticalSeparator}" 
                         WidthRequest="4"></BoxView>
                <Label toolkit:DockLayout.DockPosition="Top">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Supplement "></Span>
                            <Span Text="{Binding Index}"></Span>
                            <Span Text=" "></Span>
                            <Span Text="{Binding CreatedText}"></Span>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <components:HtmlLabel Text="{Binding Content}"></components:HtmlLabel>
            </toolkit:DockLayout>
        </DataTemplate>
    </ContentPage.Resources>
    <Grid x:Name="StateContainer"
        toolkit:StateContainer.CurrentState="{Binding CurrentState}"
        toolkit:StateContainer.CanStateChange="{Binding CanCurrentStateChange}">

        <toolkit:StateContainer.StateViews>
            <ActivityIndicator toolkit:StateView.StateKey="Loading" 
                               Color="{StaticResource Violet900}"
                               IsRunning="True"
                               HorizontalOptions="Center"
                               VerticalOptions="Center" />
            <RefreshView toolkit:StateView.StateKey="Success"
                         HeightRequest="{Binding Height, Source={x:Reference StateContainer}}"
                         RefreshColor="{StaticResource Violet900}"
                         Command="{Binding LoadCommand}">
                <CollectionView ItemsSource="{Binding Topic.Replies}"
                                SelectionMode="None"
                                ItemTemplate="{StaticResource ReplyCard}"
                                RemainingItemsThreshold="5"
                                RemainingItemsThresholdReachedCommand="{Binding RemainingReachedCommand}"
                                Header="{Binding Topic}"
                                HeaderTemplate="{StaticResource HeaderTemplate}"
                                Footer="{Binding .}"
                                FooterTemplate="{StaticResource FooterTemplate}">
                </CollectionView>
            </RefreshView>
            <Label toolkit:StateView.StateKey="Error"
                   Text="{Binding Exception}" 
                   VerticalOptions="Center"
                   HorizontalOptions="Center"></Label>
        </toolkit:StateContainer.StateViews>
    </Grid>
</ContentPage>
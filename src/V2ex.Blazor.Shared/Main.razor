<Router AppAssembly="@typeof(Main).Assembly">
    <Found Context="routeData">
        <CascadingAuthenticationState>
            <Navigation>
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(ReturnLayout)">
                    <Authorizing>
                        <div>正在加载用户数据...</div>
                    </Authorizing>
                    <NotAuthorized>
                        <LoginRedirect></LoginRedirect>
                    </NotAuthorized>
                </AuthorizeRouteView>
                @* <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" /> *@
                <FocusOnNavigate RouteData="@routeData" Selector="input" />
            </Navigation>
        </CascadingAuthenticationState>
    </Found>
    <NotFound>
        <HeadTitle Title="Not found"></HeadTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <NotFoundView></NotFoundView>
        </LayoutView>
    </NotFound>
</Router>

@code {

    [Parameter]
    public string? Url { get; set; }

    [Inject]
    private IJSRuntime JsRuntime { get; set; } = default!;

    private IJSObjectReference? interopModule;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            interopModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import",
            "./_content/V2ex.Blazor.Shared/Main.razor.js");

            await interopModule.InvokeVoidAsync("initialize", GetPlatform());
        }
    }

    private string GetPlatform()
    {
        if (OperatingSystem.IsWindows())
        {
            return "windows";
        }
        else if (OperatingSystem.IsAndroid())
        {
            return "android";
        }
        else if (OperatingSystem.IsLinux())
        {
            return "linux";
        }
        else if (OperatingSystem.IsMacOS())
        {
            return "macos";
        }
        else if (OperatingSystem.IsIOS())
        {
            return "ios";
        }
        else
        {
            return "unknow";
        }
    }
}
@page "/test"

<div class="w-full flex-col" @ref="containerRef">
    <div class="flex flex-row w-full">
        <div class="h-10 w-full bg-gray-100 border-2 border-gray-200 m-4 p-2 rounded-lg cursor:pointer"
            @onclick="OnInputClick">回复...</div>

    </div>

    <div class="flex flex-row w-full p-4">
        <ReplyInput></ReplyInput>
    </div>

    <!-- CallUp user modal -->
    <div id="replyInputModal" tabindex="-1" aria-hidden="true"
        class="hidden fixed top-0 right-0 left-0 z-50 justify-center items-end w-full h-modal !h-full md:inset-0 ">
        <div class="relative bg-gray-200/10 p-0 w-full">
            <!-- Modal content -->
            <div class="relative p-4 bg-white rounded-lg shadow dark:bg-gray-800">
                <!-- Modal body -->
                <div class="overflow-y-auto">
                    <ReplyInput></ReplyInput>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [Inject]
    private IJSRuntime JsRuntime { get; set; } = null!;

    private IJSObjectReference? interopModule;
    private IJSObjectReference? modalRef;
    private ElementReference? containerRef;
    private DotNetObjectReference<Test>? thisRef;


    protected override Task OnInitializedAsync()
    {

        // this.Navigation.NavigateTo("t/997543");

        return Task.CompletedTask;
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            interopModule = await JsRuntime.InvokeAsync<IJSObjectReference>(
            "import", "./_content/V2ex.Blazor.Shared/Pages/Test.razor.js");
            modalRef = await interopModule.InvokeAsync<IJSObjectReference>("initializeModal",
            containerRef, thisRef);
        }
    }

    private async Task OnInputClick()
    {
        if (modalRef == null)
        {
            return;
        }
        await modalRef.InvokeVoidAsync("show");
    }
}
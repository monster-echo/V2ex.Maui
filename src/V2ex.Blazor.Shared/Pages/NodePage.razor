@page "/go/{node}"
<InfiniteList T="TopicViewModel" LoadAsync="LoadAsync">
    <ItemContent>
        <Topic ViewModel="context"></Topic>
    </ItemContent>
</InfiniteList>

@code {

    [Inject]
    private ApiService ApiService { get; set; } = null!;
    [Parameter]
    public string Node { get; set; } = null!;

    private static string GetTopicId(string topicLink)
    {
        var index = topicLink.LastIndexOf('/');
        return topicLink.Substring(index + 1);
    }

    private async Task<(int CurrentPage, int MaximumPage, IReadOnlyList<TopicViewModel> Topics)> LoadAsync(int page)
    {
        var nodePageInfo = await ApiService.GetNodePageInfo(this.Node, page);

        if (nodePageInfo == null)
        {
            throw new InvalidOperationException("Can not get node page info");
        }

        var currentPage = nodePageInfo.CurrentPage;
        var maximumPage = nodePageInfo.MaximumPage;
        var topics = nodePageInfo.Items.Select(o => new TopicViewModel(
                            GetTopicId(o.TopicLink),
                            Node,
                            o.TopicTitle,
                            o.TopicLink,
                            o.Avatar,
                            o.UserLink,
                            o.UserName,
                            o.UserLink,
                            o.Created,
                            o.CreatedText,
                            o.LastReplyUserName,
                            null,
                            null,
                            o.Replies
                            )).ToList();
        return new(currentPage, maximumPage, topics);
    }
}
@page "/write"
@attribute [Authorize]

<HeadTitle Title="创作新主题"></HeadTitle>

<LoadingBox Load="LoadAsync">
    <Loading>
        <div class="text-center absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
            <div role="status">
                <svg aria-hidden="true"
                    class="inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600"
                    viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                        fill="currentColor" />
                    <path
                        d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                        fill="currentFill" />
                </svg>
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    </Loading>
    <Content>
        <div class="max-w-md mx-auto py-8 flex flex-col px-4 md:px-0">
            <div class="relative z-0 w-full mb-5 group">
                <input type="text" name="floating_title" id="floating_title"
                    class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                    placeholder=" " @bind-value="title" />
                <label for="floating_title"
                    class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">标题</label>
            </div>
            <div class="relative z-0 w-full mb-5 group">
                <textarea rows="20" name="floating_content" id="floating_content" value="@content"
                    @onchange="(e)=> {content = e.Value?.ToString();}"
                    class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                    placeholder="如果标题能够表达完整内容，此处可为空。" />
            </div>

            @if (this.nodesInfo != null)
            {
                <select
                    class="block mb-5 w-full p-2 mb-6 text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer">
                    @foreach (var node in nodesInfo)
                    {
                        var name = node.Name;
                        var title = node.Title;
                        if (name == null || title == null)
                        {
                            continue;
                        }

                        if (name == this.selectNode)
                        {
                            <option value="@name" selected>@title / @name</option>
                        }
                        else
                        {
                            <option value="@name">@title / @name</option>
                        }

                    }
                </select>
            }
            @if (createTopicParameter != null)
            {
                <div class="relative z-0 w-full mb-5 flex flex-wrap space-x-2 space-y-2 -ml-2 -mt-2 items-center">
                    <div class="mt-2 ml-2">最热节点</div>
                    @if (AppConstants.IsDebug)
                    {
                        <button class="p-2 bg-gray-400 rounded-lg text-gray-50" @onclick="SetSandBoxNode">沙盒</button>
                    }
                    @foreach (var node in createTopicParameter.HotNodes)
                    {
                        <button class="p-2 bg-gray-400 rounded-lg text-gray-50"
                            @onclick="()=>ChooseNode(node.Link)">@node.Title</button>
                    }
                </div>
            }

            @if (errors != null)
            {
                <div class="relative z-0 w-full mb-5 flex flex-wrap space-x-2 space-y-2 -ml-2 -mt-2 items-center">
                    @foreach (var error in errors)
                    {
                        <div class="p-4 mb-4 text-sm text-yellow-800 rounded-lg bg-yellow-50 dark:bg-gray-800 dark:text-yellow-300"
                            role="alert">
                            @error
                        </div>
                    }
                </div>
            }


            @if (isPublishing)
            {
                <button disabled type="button"
                    class="p-2.5 text-sm font-medium text-white bg-gray-50 rounded-e-lg border border-gray-300">
                    <svg aria-hidden="true" role="status" class="animate-spin" height="16" width="16" viewBox="0 0 100 101"
                        fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                            fill="currentColor" />
                        <path
                            d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                            fill="#1C64F2" />
                    </svg>
                    发布中...
                </button>
            }
            else
            {
                <button type="button"
                    class="text-white bg-gray-700 hover:bg-gray-800 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center self-end"
                    @onclick="CreateTopicAsync">
                    发布
                </button>
            }

        </div>
    </Content>
</LoadingBox>

@code {
    [Inject]
    private ApiService ApiService { get; set; } = null!;
    [Inject]
    private IToastService Toast { get; set; } = null!;
    [Inject]
    private NavigationManager NavigationManager { get; set; } = null!;

    private CreateTopicParameter? createTopicParameter;
    private NodesInfo? nodesInfo;

    private string? title;
    private string? content;
    private string? selectNode;
    private bool isPublishing;
    private List<string>? errors;

    private async Task LoadAsync()
    {
        createTopicParameter = await ApiService.GetCreateTopicParameter();
        nodesInfo = await ApiService.GetNodesInfo2();
#if DEBUG
selectNode = "sandbox";
#endif
    }

    private void SetSandBoxNode()
    {
        selectNode = "sandbox";
    }

    private Task ChooseNode(string link)
    {
        selectNode = link.Replace("javascript:chooseNode('", "").Replace("')", "");
        return Task.CompletedTask;
    }

    private async Task CreateTopicAsync()
    {
        var once = createTopicParameter?.Once;
        if (string.IsNullOrEmpty(title)
        || string.IsNullOrEmpty(selectNode)
        || string.IsNullOrEmpty(once))
        {
            return;
        }

        try
        {
            isPublishing = true;
            var topicInfo = await this.ApiService.PostTopic(title, content ?? "", selectNode, once);
            await this.Toast.Show("话题创建成功");
        }
        catch (CreateTopicException exception)
        {
            this.errors = exception.Problem.Errors;
            await this.Toast.Show("无法创建话题");
        }
        catch (Exception)
        {
            //todo: handle this exception
            await this.Toast.Show("创建失败");
        }
        finally
        {
            isPublishing = false;
        }
    }
}

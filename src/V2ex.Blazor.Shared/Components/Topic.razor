<div class="flex flex-col px-4 py-2" @onclick="GoToTopic">
    <div class="flex flex-row justify-center select-none">
        @if (!string.IsNullOrEmpty(ViewModel.Avatar))
        {
            <a href="@ViewModel.AvatarLink" class="flex flex-row items-center mr-2" @onclick:stopPropagation="true">
                <img class="w-10 h-10" src="@ViewModel.Avatar" alt="avatar">
            </a>
        }

        <div class="flex flex-col flex-1 justify-center">
            <div class="flex flex-row">
                <a href="@ViewModel.UserLink" @onclick:stopPropagation="true">
                    <span class="text-sm text-gray-900">@ViewModel.UserName</span>
                </a>
            </div>

            <div class="flex flex-row">
                <span class="text-sm text-gray-500">@ViewModel.LastRepliedText</span>

                @if (ViewModel.NodeName != null)
                {
                    <span class="text-sm text-gray-500 ml-2">评论 @ViewModel.Replies</span>
                }
            </div>
        </div>

        <div class="flex items-center ">
            @if (ViewModel.NodeName != null)
            {
                <a href="@ViewModel.NodeLink" @onclick:stopPropagation="true">
                    <span class="text-sm text-gray-50 bg-gray-400 rounded-full px-2 py-1">@ViewModel.NodeName</span>
                </a>
            }
            else
            {
                <span class="text-sm text-gray-50 bg-gray-400 rounded-full px-2 py-1">@ViewModel.Replies</span>
            }
        </div>
    </div>

    <div class="flex flex-row py-2 select-auto cursor-pointer">
        <span class="text-md text-gray-900">@ViewModel.Title</span>
    </div>
</div>

@code {

    [Parameter]
    public TopicViewModel ViewModel { get; set; } = null!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = null!;

    [Inject]
    private ILogger<Topic> Logger { get; set; } = null!;
    override protected void OnInitialized()
    {
    }


    private void GoToTopic()
    {
        var link = ViewModel.Link;
        this.NavigationManager.NavigateTo(link);
        this.Logger.LogInformation($"GoToTopic {link}");
    }
}
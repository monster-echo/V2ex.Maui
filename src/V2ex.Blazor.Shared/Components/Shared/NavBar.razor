<nav class="w-full bg-gray-100 border-b border-gray-200 dark:bg-gray-800 dark:border-gray-700 z-50 ">
    <div class="px-3 py-3 lg:px-5 lg:pl-3">
        <div class="flex items-center justify-between">
            <div class="flex items-center justify-start md:w-64">
                @if (ShowBackButton && !OperatingSystem.IsWindows())
                {
                    <button @onclick="GoBack"
                        class="px-4 py-2 inline-flex items-center text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
                        <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M5 1 1 5l4 4" />
                        </svg>
                    </button>
                }

                <button data-drawer-target="logo-sidebar" data-drawer-toggle="logo-sidebar" aria-controls="logo-sidebar"
                    type="button"
                    class="inline-flex items-center p-2 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
                    <span class="sr-only">Open sidebar</span>
                    <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg">
                        <path clip-rule="evenodd" fill-rule="evenodd"
                            d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z">
                        </path>
                    </svg>
                </button>
                <a href="/" class="flex ml-2 md:mr-24">
                    <span
                        class="self-center text-xl font-semibold sm:text-2xl whitespace-nowrap dark:text-white">V2ex</span>
                </a>
            </div>

            <SectionOutlet SectionName="NavHeader"></SectionOutlet>

            @if (currentUser != null && currentUser.IsAuthenticated)
            {
                <div class="flex items-center">
                    <div class="flex items-center ml-3">
                        <div>
                            <button type="button"
                                class="relative flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
                                @onclick="GoToNotifications">
                                <span class="sr-only">Open user menu</span>
                                <img class="w-10 h-10 rounded-full shadow-md" src="@currentUser.Avatar" alt="user photo">

                                @if(currentUser.Notifications>0)
                                {
                                    <div  class="absolute inline-flex items-center justify-center w-6 h-6 text-xs font-bold text-white bg-red-500 border-2 border-white rounded-full -top-2 -end-2 dark:border-gray-900">
                                        @currentUser.Notifications
                                    </div>
                                }

                            </button>
                        </div>

                    </div>
                </div>
            }
            else
            {
                <div class="flex items-center">

                    <button type="button" class="flex text-sm bg-gray-200 p-2 rounded-full focus:ring-4 focus:ring-gray-300"
                        @onclick="GoToLogin">
                        <svg xmlns="http://www.w3.org/2000/svg" height="16" width="14" viewBox="0 0 448 512">
                            <!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.-->
                            <path
                                d="M304 128a80 80 0 1 0 -160 0 80 80 0 1 0 160 0zM96 128a128 128 0 1 1 256 0A128 128 0 1 1 96 128zM49.3 464H398.7c-8.9-63.3-63.3-112-129-112H178.3c-65.7 0-120.1 48.7-129 112zM0 482.3C0 383.8 79.8 304 178.3 304h91.4C368.2 304 448 383.8 448 482.3c0 16.4-13.3 29.7-29.7 29.7H29.7C13.3 512 0 498.7 0 482.3z" />
                        </svg>
                    </button>
                </div>
            }
        </div>
    </div>
</nav>

@code {
    [Parameter]
    public bool ShowBackButton { get; set; } = false;

    [CascadingParameter]
    public Status Status { get; set; } = null!;
    [Inject]
    private INativeNavigation Navigation { get; set; } = null!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = null!;


    private CurrentUser? currentUser;
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        currentUser = new CurrentUser((await AuthenticationStateTask).User);
    }

    private string Avatar
    {
        get
        {
            if (currentUser != null && currentUser.IsAuthenticated)
            {
                return currentUser.Avatar;
            }
            return "https://cdn.v2ex.com/gravatar/0f9c0b0d7f0f3f0f9c0b0d7f0f3f0f9c?s=48&d=retro";
        }
    }

    private Task GoBack()
    {
        return Navigation.GoBack();
    }

    private Task GoToLogin()
    {
        NavigationManager.NavigateTo("/account/login");
        return Task.CompletedTask;
    }

    private Task GoToNotifications()
    {
        NavigationManager.NavigateTo("/notifications");
        return Task.CompletedTask;
    }
}